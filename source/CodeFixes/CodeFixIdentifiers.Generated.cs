// Copyright (c) Josef Pihrt. All rights reserved. Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.

// <auto-generated>

namespace Roslynator.CSharp.CodeFixes
{
    public static partial class CodeFixIdentifiers
    {
        public const string RemoveUnusedVariable = Prefix + "9000";
        public const string AddBreakStatementToSwitchSection = Prefix + "9001";
        public const string CreateSingletonArray = Prefix + "9002";
        public const string AddOutModifierToArgument = Prefix + "9003";
        public const string MoveBaseClassBeforeAnyInterface = Prefix + "9004";
        public const string AddOverrideModifier = Prefix + "9005";
        public const string AddNewModifier = Prefix + "9006";
        public const string ExtractDeclarationFromUsingStatement = Prefix + "9007";
        public const string AddBracesToDeclarationOrLabeledStatement = Prefix + "9008";
        public const string MarkOperatorAsPublicAndStatic = Prefix + "9009";
        public const string RemoveDuplicateModifier = Prefix + "9010";
        public const string RemoveDuplicateAttribute = Prefix + "9011";
        public const string RemoveNewModifier = Prefix + "9012";
        public const string RemoveUnusedLabel = Prefix + "9013";
        public const string OverridingMemberCannotChangeAccessModifiers = Prefix + "9014";
        public const string AddDocumentationComment = Prefix + "9015";
        public const string RemoveUnreachableCode = Prefix + "9016";
        public const string MemberReturnTypeMustMatchOverriddenMemberReturnType = Prefix + "9017";
        public const string MemberTypeMustMatchOverriddenMemberType = Prefix + "9018";
        public const string AddReturnStatementThatReturnsDefaultValue = Prefix + "9019";
        public const string UseYieldReturnInsteadOfReturn = Prefix + "9020";
        public const string ReplaceStringLiteralWithCharacterLiteral = Prefix + "9021";
        public const string AddComparisonWithBooleanLiteral = Prefix + "9022";
        public const string RemovePropertyOrFieldInitializer = Prefix + "9023";
        public const string AddPartialModifier = Prefix + "9024";
        public const string AddMethodBody = Prefix + "9025";
        public const string RemoveRefModifier = Prefix + "9026";
        public const string RemoveRedundantAssignment = Prefix + "9027";
        public const string ChangeAccessibility = Prefix + "9028";
        public const string ChangeTypeOfParamsParameter = Prefix + "9029";
        public const string UseUncheckedExpression = Prefix + "9030";
        public const string RemoveImplementationFromAbstractMember = Prefix + "9031";
        public const string AddStaticModifier = Prefix + "9032";
        public const string MakeContainingClassAbstract = Prefix + "9033";
    }
}