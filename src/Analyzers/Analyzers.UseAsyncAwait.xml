<?xml version="1.0" encoding="utf-8"?>
<Analyzers>
  <Analyzer Identifier="UseAsyncAwait">
    <Id>RCSX006</Id>
    <Title>Use async/await when necessary.</Title>
    <MessageFormat>Use async/await when necessary.</MessageFormat>
    <Category>Reliability</Category>
    <DefaultSeverity>Info</DefaultSeverity>
    <IsEnabledByDefault>true</IsEnabledByDefault>
    <SupportsFadeOut>false</SupportsFadeOut>
    <SupportsFadeOutAnalyzer>false</SupportsFadeOutAnalyzer>
    <Summary></Summary>
    <Samples>
      <Sample>
        <Before><![CDATA[Task<object> FooAsync()
{
    using (var service = CreateService())
    {
        return service.GetAsync();
    }
}
]]></Before>
        <After><![CDATA[async Task<object> FooAsync()
{
    using (var service = CreateService())
    {
        return await service.GetAsync();
    }
}]]></After>
      </Sample>
    </Samples>
    <Remarks></Remarks>
    <Links>
      <Link>
        <Url>http://thebillwagner.com/Blog/Item/2017-05-03-ThecuriouscaseofasyncawaitandIDisposable</Url>
        <Text>The curious case of async, await, and IDisposable</Text>
      </Link>
      <Link>
        <Url>https://github.com/JosefPihrt/Roslynator/issues/419</Url>
      </Link>
    </Links>
  </Analyzer>
</Analyzers>